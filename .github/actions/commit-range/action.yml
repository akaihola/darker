---
name: 'Get Commit Range'
description: 'Outputs the commit range for a push or pull request'
outputs:
  commit_range:
    description: 'The commit range'
    value: ${{ steps.get-range.outputs.range }}
runs:
  using: "composite"
  steps:
    - name: Get commit range
      id: get-range
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "==== Get Commit Range action ===="
        echo "Event type: ${{ github.event_name }}"

        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "Processing a pull request event"
          echo "Pull Request number: ${{ github.event.pull_request.number }}"
          base_sha=${{ github.event.pull_request.base.sha }}
          head_sha=${{ github.event.pull_request.head.sha }}
          echo "Base SHA: ${base_sha}"
          echo "Head SHA: ${head_sha}"

          echo "Fetching merge base from GitHub API..."
          merge_base=$(gh api \
            repos/${{ github.repository }}/compare/$base_sha...$head_sha \
            --jq '.merge_base_commit.sha')
          echo "Merge base: ${merge_base}"

          range="${merge_base}...${head_sha}"
          echo "Calculated range: ${range}"
          echo "range=${range}" >> $GITHUB_OUTPUT

          echo "Explanation: This range represents all commits in the pull request"
          echo "branch that are not in the base branch, starting from the common"
          echo "ancestor (merge base)."

        elif [[ "${{ github.event_name }}" == "push" ]]; then
          echo "Processing a push event"
          echo "Ref: ${{ github.ref }}"
          echo "After SHA: ${{ github.sha }}"

          echo "Fetching the pull request information..."
          pr_info=$(\
            gh pr list \
              --head ${{ github.ref_name }} \
              --json number,baseRefName \
              --limit 1)
          if [[ \
              -n "$pr_info" && \
              "$(echo "$pr_info" | jq '.[0].baseRefName')" != "null" \
          ]]; then
            base_branch=$(echo "$pr_info" | jq -r '.[0].baseRefName')
            echo "Associated PR found. Base branch: ${base_branch}"
          else
            echo "No associated PR found or base branch is null."
            echo "Using default branch as base."
            base_branch=$(gh api repos/${{ github.repository }} --jq '.default_branch')
            echo "Default branch: ${base_branch}"
          fi

          echo "Fetching the branch point..."
          if ! branch_point=$(git merge-base origin/${base_branch} ${{ github.sha }})
          then
            echo "Failed to find merge-base."
            echo "Using the first commit of the current branch."
            branch_point=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "Branch point: ${branch_point}"

          range="${branch_point}...${{ github.sha }}"
          echo "Calculated range: ${range}"
          echo "range=${range}" >> $GITHUB_OUTPUT

          echo "This range represents all commits in ${{ github.ref }} since it"
          echo "diverged from ${base_branch}."

        else
          echo "Error: Unsupported event type: ${{ github.event_name }}"
          exit 1
        fi

        echo "==== Get Commit Range action complete ===="
