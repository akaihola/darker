[project]
name = "darker"
description = "Apply Black formatting only in regions changed since last commit"
authors = ["Antti Kaihola 13725+akaihola@users.noreply.github.com"]
license = "BSD"
requires-python = ">=3.8"
# NOTE: remember to keep `.github/workflows/python-package.yml` in sync
#       with the minimum required Python version
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
[project.urls]
"Source Code" = "https://github.com/akaihola/darker"
"Change Log" = "https://github.com/akaihola/darker/blob/master/CHANGES.rst"
"News" = "https://github.com/akaihola/darker/discussions/categories/announcements"

[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools", "wheel"]  # PEP 508 specifications.
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
darker = ["py.typed", "pyi"]

[tool.setuptools.packages.find]
where = ["src"]

[project.dependencies]
# NOTE: remember to keep `constraints-oldest.txt` in sync with these
black = ">=22.3.0"
darkgraylib = "~=2.0.1"
toml = ">=0.10.0"
typing_extensions = ">=4.0.1"

[project.optional-dependencies]
flynt = ["flynt>=0.76"]
isort = ["isort>=5.0.1"]
color = ["Pygments>=2.4.0"]
test = [
    "black>=22.3.0",
    "cryptography>=3.3.2",
    "defusedxml>=0.7.1",
    "flynt>=0.76",
    "isort>=5.0.1",
    "mypy>=0.990",
    "pathspec",
    "pydocstyle",
    "pygments",
    "pylint<=3.2.7",
    "pytest>=6.2.0",
    "pytest-kwparametrize>=0.0.3",
    "regex>=2021.4.4",
    "requests_cache>=0.7",
    "ruamel.yaml>=0.17.21",
    "ruff>=0.0.292",
    "twine>=2.0.0",
    "types-requests>=2.27.9",
    "types-toml>=0.10.4",
    "urllib3>=1.25.9",
    "wheel>=0.21.0"
]
release = ["darkgray-dev-tools~=0.1.1"]

[tool.black]
# Darker makes Black read its configuration from the file indicated by the `--config`
# option, so we need to mirror the same configuration here and in `check-darker.toml`.
skip-string-normalization = false
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.isort]
# Darker makes isort read its configuration from the file indicated by the `--config`
# option, so we need to mirror the same configuration here and in `check-darker.toml`.
profile = "black"
known_first_party = ["darkgraylib", "graylint"]
known_third_party = ["pytest"]

[tool.darker]
# Only minimal options for Darker by default, so it's easier to test while developing.
# To check Darker's own code base with the full set of reformatters and linters, use:
#   $ darker --config=check-darker.toml
src = [
    "action",
    "release_tools",
    "src",
    "setup.py",
]
revision = "origin/master..."

[tool.graylint]
revision = "origin/master..."
src = ["."]

[tool.pylint."messages control"]
# Check import order only with isort. Pylint doesn't support a custom list of first
# party packages. We want to consider "darkgraylib" and "graylint" as first party.
disable = ["wrong-import-order"]

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A002",  # builtin-argument-shadowing
    "ANN101",  # Missing type annotation for `self` in method
    "COM812",  # Trailing comma missing
    "D203",  # One blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D400",  # First line should end with a period (duplicates D415)

    # Remove these when support for Python 3.8 is dropped:
    "UP006",  # Use `xyz` instead of `Xyz` for type annotation
    "UP007",  # Use `X | Y` for type annotations
]

[tool.ruff.lint.per-file-ignores]
"action/*.py" = [
    "T201",  # `print` found
]
"action/tests/*.py" = [
    "S101",  # Use of `assert` detected
]
"src/darker/__main__.py" = [
    "T201",  # `print` found
]
"src/darker/tests/*.py" = [
    "ANN001",  # Missing type annotation for function argument
    "ANN201",  # Missing return type annotation for public function
    "ANN204",  # Missing return type annotation for special method `__init__`
    "C408",  # Unnecessary `dict` call (rewrite as a literal)
    "PLR0913",  # Too many arguments in function definition (n > 5)
    "S101",  # Use of `assert` detected
]

[tool.ruff.lint.isort]
known-first-party = ["darkgraylib", "graylint"]
known-third-party = ["pytest"]
