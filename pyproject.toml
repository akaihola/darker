[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools", "wheel"]  # PEP 508 specifications.

[project]
name = "darker"
version = "2.1.1"
authors = [{name = "Antti Kaihola", email = "13725+akaihola@users.noreply.github.com"}]
license = {text = "BSD"}
description = "Apply Black formatting only in regions changed since last commit"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "darkgraylib>=2.4.0,<3.0.dev0",
    "toml>=0.10.0",
    "typing_extensions>=4.0.1",
]
dynamic = ["readme"]

[project.optional-dependencies]
color = [
    "Pygments>=2.4.0",
]
black = [
    "black>=24.10.0",
]
pyupgrade = [
    "pyupgrade>=2.31.0",
]
flynt = [
    "flynt>=0.76",
]
isort = [
    "isort>=5.0.1",
]
ruff = [
    "ruff>=0.0.292",
]
release = [
    "darkgray-dev-tools~=0.3.0",
]

[dependency-groups]
dev = [
    "black>=22.3.0",
    "darkgray-dev-tools~=0.3.0",
    "defusedxml>=0.7.1",
    "flynt>=0.76",
    "isort>=5.0.1",
    "mypy>=1.15",
    "packaging",
    "pathspec>=0.2.2", # to test `gen_python_files` in `test_black_diff.py`
    "pydocstyle",
    "Pygments>=2.4.0",
    "pyupgrade>=2.31.0",
    "pylint>=3.2.7",
    "pylint-per-file-ignores",
    "pytest>=6.2.0",
    "pytest-kwparametrize>=0.0.3",
    "pyupgrade>=2.31.0",
    "regex>=2021.4.4",
    "requests_cache>=0.7",
    "ruamel.yaml>=0.17.21",
    "ruff>=0.0.292",
    "twine>=2.0.0",
    "types-requests>=2.27.9",
    "types-toml>=0.10.4",
    "wheel>=0.21.0",
    "astor>=0.8.1",
]

[project.urls]
Homepage = "https://github.com/akaihola/darker"
"Source Code" = "https://github.com/akaihola/darker"
"Change Log" = "https://github.com/akaihola/darker/blob/master/CHANGES.rst"
News = "https://github.com/akaihola/darker/discussions/categories/announcements"

[project.entry-points."darker.formatter"]
black = "darker.formatters.black_formatter:BlackFormatter"
ruff = "darker.formatters.ruff_formatter:RuffFormatter"
pyupgrade = "darker.formatters.pyupgrade_formatter:PyupgradeFormatter"
none = "darker.formatters.none_formatter:NoneFormatter"

[project.scripts]
darker = "darker.__main__:main_with_error_handling"

[tool.black]
# Darker makes Black read its configuration from the file indicated by the `--config`
# option, so we need to mirror the same configuration here and in `check-darker.toml`.
skip-string-normalization = false
target-version = ["py39", "py310", "py311", "py312"]

[tool.isort]
# Darker makes isort read its configuration from the file indicated by the `--config`
# option, so we need to mirror the same configuration here and in `check-darker.toml`.
profile = "black"
known_first_party = ["darkgraylib", "graylint"]
known_third_party = ["pytest"]

[tool.darker]
# Only minimal options for Darker by default, so it's easier to test while developing.
# To check Darker's own code base with the full set of reformatters and linters, use:
#   $ darker --config=check-darker.toml
src = [
    "action",
    "release_tools",
    "src",
    "setup.py",
]
revision = "origin/master..."

[tool.graylint]
revision = "origin/master..."
src = ["."]

[tool.pylint.MASTER]
load-plugins = [
    "pylint_per_file_ignores",
]

[tool.pylint."messages control"]
# Check import order only with isort. Pylint doesn't support a custom list of first
# party packages. We want to consider "darkgraylib" and "graylint" as first party.
disable = ["wrong-import-order"]
per-file-ignores = [
  "/stubs/:missing-class-docstring,missing-function-docstring,unused-argument",
]

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A002",  # builtin-argument-shadowing
    "COM812",  # Trailing comma missing
    "D203",  # One blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D400",  # First line should end with a period (duplicates D415)
    "ISC001",  # Checks for implicitly concatenated strings on a single line
]

[tool.ruff.lint.per-file-ignores]
"action/*.py" = [
    "T201",  # `print` found
]
"action/tests/*.py" = [
    "S101",  # Use of `assert` detected
]
"src/darker/__main__.py" = [
    "T201",  # `print` found
]
"src/darker/tests/*.py" = [
    "ANN001",  # Missing type annotation for function argument
    "ANN201",  # Missing return type annotation for public function
    "ANN204",  # Missing return type annotation for special method `__init__`
    "ARG001",  # Unused function argument
    "C408",  # Unnecessary `dict` call (rewrite as a literal)
    "PLR0913",  # Too many arguments in function definition (n > 5)
    "S101",  # Use of `assert` detected
]

[tool.ruff.lint.isort]
known-first-party = ["darkgraylib", "graylint"]
known-third-party = ["pytest"]
